plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id 'maven-publish'
}

group = 'fr.twizox'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.simplix.dev/repository/simplixsoft-public/' }
    maven { url 'https://mvn.exceptionflug.de/repository/exceptionflug-public/' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.11.2'
    implementation 'com.h2database:h2:2.1.214'
    implementation 'com.j256.ormlite:ormlite-jdbc:6.1'
    implementation 'com.github.Xezard:XConfiguration:2.0.2'
    //implementation 'dev.simplix.cirrus:cirrus-spigot:2.1.0-SNAPSHOT'
    //implementation 'dev.simplix.cirrus:cirrus-common:2.1.0-SNAPSHOT'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

compileJava.options.encoding = 'UTF-8'

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
